generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URI")
}

model User {
  id          String   @id @default(uuid())
  email       String   @unique
  password    String
  displayName String
  picture     String?
  isVerified  Boolean  @default(false) @map("isverified")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  ownedCharts Charts[]

  memberOf Charts[] @relation("ChartsMembers")

  @@map("users")
}

model Charts {
  id        String   @id @default(uuid())
  editable  Boolean  @default(true)
  createdAt DateTime @default(now()) @map("created_at")

  ownerId String
  owner   User   @relation(fields: [ownerId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  members User[] @relation("ChartsMembers")

  admin String[]

  bars Bar[]

  @@map("charts")
}

model Bar {
  id        String  @id @default(uuid())
  start     Int
  end       Int
  name      String
  progress  Int
  duration  String
  important Boolean @default(false)

  chartId String @map("chart_id")
  chart   Charts @relation(fields: [chartId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  dependsOn  BarDependency[] @relation("DependsOn")
  dependents BarDependency[] @relation("Dependents")

  @@map("bars")
}

model BarDependency {
  fromBarId String
  toBarId   String

  from Bar @relation("DependsOn", fields: [fromBarId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  to   Bar @relation("Dependents", fields: [toBarId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@id([fromBarId, toBarId])
  @@map("bar_dependencies")
}
